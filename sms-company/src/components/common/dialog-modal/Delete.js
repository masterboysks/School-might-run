import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import { Fragment, useRef, useState } from "react";
import { Dialog, Transition } from "@headlessui/react";
import { ExclamationTriangleIcon } from "@heroicons/react/24/outline";
import { useContext } from "react";
import { DeleteModalContex } from "../../../contex/admin/common/ContexForDeleteModal";
import { useEffect } from "react";
export default function Delete() {
    const value = useContext(DeleteModalContex);
    // const value = useContext<any>(DeleteModalContex);
    const [open, setOpen] = useState(false);
    const cancelButtonRef = useRef(null);
    useEffect(() => {
        setOpen(value?.value ? true : false);
    }, [value]);
    return (_jsx(Transition.Root, { show: open, as: "div", children: value?.value &&
            (value?.value?.inUse ? (_jsxs(Dialog, { as: "div", className: "relative z-[99999]", initialFocus: cancelButtonRef, onClose: setOpen, children: [_jsx(Transition.Child, { as: Fragment, enter: "ease-out duration-300", enterFrom: "opacity-0", enterTo: "opacity-100", leave: "ease-in duration-200", leaveFrom: "opacity-100", leaveTo: "opacity-0", children: _jsx("div", { className: "fixed inset-0 z-[99999] bg-gray-500 bg-opacity-75 transition-opacity" }) }), _jsx("div", { className: "fixed inset-0 z-[999999] overflow-y-auto", children: _jsx("div", { className: "flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0", children: _jsx(Transition.Child, { as: Fragment, enter: "ease-out duration-300", enterFrom: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95", enterTo: "opacity-100 translate-y-0 sm:scale-100", leave: "ease-in duration-200", leaveFrom: "opacity-100 translate-y-0 sm:scale-100", leaveTo: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95", children: _jsxs(Dialog.Panel, { className: "relative transform w-full overflow-hidden rounded-lg bg-white px-4 pt-5 pb-4 text-left shadow-lg transition-all sm:my-8 sm:w-full sm:max-w-lg sm:p-6", children: [_jsxs("div", { className: "sm:flex sm:items-start", children: [_jsx("div", { className: "mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10", children: _jsx(ExclamationTriangleIcon, { className: "h-6 w-6 text-red-600", "aria-hidden": "true" }) }), _jsxs("div", { className: "mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left", children: [_jsxs(Dialog.Title, { as: "h3", className: "text-lg font-medium leading-6 text-gray-900", children: ["This ", value?.value?.heading, " cannot be deleted."] }), _jsx("div", { className: "mt-2", children: _jsxs("p", { className: "text-sm text-gray-500", children: ["To delete this ", value?.value?.heading, ", you need to first re-assign or remove the", " ", value?.value?.heading, "s using it."] }) })] })] }), _jsx("div", { className: "mt-5 sm:mt-4 sm:flex sm:flex-row-reverse", children: _jsx("button", { type: "button", className: "mt-3 inline-flex w-full justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-base font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:mt-0 sm:w-auto sm:text-sm", onClick: () => {
                                                    value?.setValue(null);
                                                }, ref: cancelButtonRef, children: "Ok" }) })] }) }) }) })] })) : (_jsxs(Dialog, { as: "div", className: "relative z-[99999]", initialFocus: cancelButtonRef, onClose: setOpen, children: [_jsx(Transition.Child, { as: Fragment, enter: "ease-out duration-300", enterFrom: "opacity-0", enterTo: "opacity-100", leave: "ease-in duration-200", leaveFrom: "opacity-100", leaveTo: "opacity-0", children: _jsx("div", { className: "fixed inset-0 z-[99999] bg-gray-500 bg-opacity-75 transition-opacity" }) }), _jsx("div", { className: "fixed inset-0 z-[999999] overflow-y-auto", children: _jsx("div", { className: "flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0", children: _jsx(Transition.Child, { as: Fragment, enter: "ease-out duration-300", enterFrom: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95", enterTo: "opacity-100 translate-y-0 sm:scale-100", leave: "ease-in duration-200", leaveFrom: "opacity-100 translate-y-0 sm:scale-100", leaveTo: "opacity-0 translate-y-4 sm:translate-y-0 sm:scale-95", children: _jsxs(Dialog.Panel, { className: "relative transform w-full overflow-hidden rounded-lg bg-white px-4 pt-5 pb-4 text-left shadow-lg transition-all sm:my-8 sm:w-full sm:max-w-lg sm:p-6", children: [_jsxs("div", { className: "sm:flex sm:items-start", children: [_jsx("div", { className: "mx-auto flex h-12 w-12 flex-shrink-0 items-center justify-center rounded-full bg-red-100 sm:mx-0 sm:h-10 sm:w-10", children: _jsx(ExclamationTriangleIcon, { className: "h-6 w-6 text-red-600", "aria-hidden": "true" }) }), _jsxs("div", { className: "mt-3 text-center sm:mt-0 sm:ml-4 sm:text-left", children: [_jsx(Dialog.Title, { as: "h3", className: "text-lg font-medium leading-6 text-gray-900", children: "Confirm delete" }), _jsx("div", { className: "mt-2", children: _jsx("p", { className: "text-sm text-gray-500", children: value?.value?.message }) })] })] }), _jsxs("div", { className: "mt-5 sm:mt-4 sm:flex sm:flex-row-reverse", children: [_jsx("button", { type: "button", className: "inline-flex w-full justify-center rounded-md border border-transparent bg-red-600 px-4 py-2 text-base font-medium text-white shadow-sm hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500 focus:ring-offset-2 sm:ml-3 sm:w-auto sm:text-sm", onClick: () => {
                                                        value?.value?.func(value?.value?.id);
                                                        value?.setValue(null);
                                                    }, children: "Delete" }), _jsx("button", { type: "button", className: "mt-3 inline-flex w-full justify-center rounded-md border border-gray-300 bg-white px-4 py-2 text-base font-medium text-gray-700 shadow-sm hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2 sm:mt-0 sm:w-auto sm:text-sm", onClick: () => {
                                                        value?.setValue(null);
                                                    }, ref: cancelButtonRef, children: "Cancel" })] })] }) }) }) })] }))) }));
}
